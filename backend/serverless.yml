service: coffee-shop-api
frameworkVersion: "4"

provider:
  name: aws
  runtime: nodejs20.x
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  environment:
    COFFEE_TABLE: ${self:service}-${self:provider.stage}-coffee
    STAGE: ${self:provider.stage}

plugins:
  - serverless-iam-roles-per-function
  - serverless-offline

functions:
  createCoffee:
    handler: src/handlers/createCoffee.handler
    events:
      - http:
          path: /coffee
          method: post
          cors: true
          request:
            schemas:
              application/json: ${file(src/models/createCoffeeRequest.json)}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource:
          - Fn::GetAtt: [CoffeeTable, Arn]

  listCoffees:
    handler: src/handlers/listCoffees.handler
    events:
      - http:
          path: /coffee
          method: get
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Scan
        Resource:
          - Fn::GetAtt: [CoffeeTable, Arn]

  getCoffee:
    handler: src/handlers/getCoffee.handler
    events:
      - http:
          path: /coffee/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
        Resource:
          - Fn::GetAtt: [CoffeeTable, Arn]

  deleteCoffee:
    handler: src/handlers/deleteCoffee.handler
    events:
      - http:
          path: /coffee/{id}
          method: delete
          cors: true
          request:
            parameters:
              paths:
                id: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:DeleteItem
        Resource:
          - Fn::GetAtt: [CoffeeTable, Arn]

resources:
  Resources:
    CoffeeTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.COFFEE_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        Tags:
          - Key: Environment
            Value: ${self:provider.stage}
          - Key: Service
            Value: ${self:service}

  Outputs:
    ApiGatewayRestApiId:
      Value:
        Ref: ApiGatewayRestApi
      Export:
        Name: ${self:service}-${self:provider.stage}-ApiGatewayRestApiId

    ApiGatewayRestApiRootResourceId:
      Value:
        Fn::GetAtt:
          - ApiGatewayRestApi
          - RootResourceId
      Export:
        Name: ${self:service}-${self:provider.stage}-ApiGatewayRestApiRootResourceId

    CoffeeTableName:
      Value:
        Ref: CoffeeTable
      Export:
        Name: ${self:service}-${self:provider.stage}-CoffeeTableName
